---
export const prerender = true;

import Layout from "../layouts/Default.astro";
import Header from "../components/Header.astro";

const sadKaomoji = [
	"(‚ï•_‚ï•)",
	"(T_T)",
	"(;Ôπè;)",
	"(ToT)",
	"(ÔΩ°‚Ä¢ÃÅÔ∏ø‚Ä¢ÃÄÔΩ°)",
	"(‡≤•Ôπè‡≤•)",
	"(ÔΩ°T œâ TÔΩ°)",
	"(‚ïØÔ∏µ‚ï∞,)",
	"(/œâÔºº)",
	"(¬¥Ôºõ–¥Ôºõ`)",
	"ÔΩ°Ôæü(Ôæü¬¥(00)`Ôæü)ÔæüÔΩ°",
	"(¬¨_¬¨)",
	"(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª",
	"(¬¨‚Äø¬¨)",
	"(‚äô_‚òâ)",
	"(‡≤†_‡≤†)",
	"—â(‡≤†Áõä‡≤†—â)",
	"(„Éé‡≤†Áõä‡≤†)„ÉéÂΩ°‚îª‚îÅ‚îª",
	"(¬¨–∑¬¨)",
	"(‚áÄ‚Ä∏‚Üº‚Ä∂)",
	"(‚îÄ‚Äø‚Äø‚îÄ)",
	"(>_<)",
	"(Ô∏∂Ô∏πÔ∏∫)",
	"(Ôø£„ÉòÔø£)",
];
---

<Layout class:list={""}>
	<div class="sticky pt-1 z-50">
		<Header />
	</div>
	<div class="w-full h-full p-8 grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-8 max-w-6xl m-auto" id="target">
		{
			Array.from({ length: 5 }).map(() => (
				<div class="card bg-base-200 shadow-xl h-72 delete-target">
					<figure class="skeleton w-full h-full" />
					<div class="card-body">
						<div class="grid gap-2">
							<p class="skeleton h-4 w-full" />
							<p class="skeleton h-4 w-16" />
						</div>
						<div class="card-actions grid grid-cols-2 mt-4">
							<div class="skeleton w-full h-8" />
							<div class="skeleton w-full h-8" />
						</div>
					</div>
				</div>
			))
		}

		<a
			href="/"
			class="card min-h-[300px] shadow-xl border-dashed border-4 border-base-content flex items-center justify-center opacity-50 hover:opacity-75 transition-all duration-500">
			<div class="p-4 border-4 leading-none aspect-square border-dashed border-base-content rounded-full">
				<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="3em" width="3em" xmlns="http://www.w3.org/2000/svg"><path d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z"></path></svg>
			</div>
		</a>
	</div>
	<template id="card">
		<div class="card bg-base-200 shadow-xl h-72 min-h-[300px]" id="">
			<figure class="w-full object-contain">
				<img src="/mem.jpg" alt="Shoes" class="w-full" />
			</figure>
			<div class="card-body">
				<p>If a dog chews shoes whose shoes does he choose?</p>
				<div class="card-actions grid grid-cols-2 mt-4">
					<button class="btn btn-sm btn-error btn-outline">üóëÔ∏è Delete</button>
					<button class="btn btn-sm btn-success">üëÄ View</button>
				</div>
			</div>
		</div>
	</template>
	<template id="notFound">
		<div class="w-full h-screen flex items-center justify-center text-center gap-8 flex-col p-8">
			<h1 class="text-8xl font-bold">
				{sadKaomoji[Math.floor(Math.random() * sadKaomoji.length)]}
			</h1>
			<p class="text-xl max-w-2xl">
				Did i got amnesia? I can't seem to find any of your memories. Help me memorize you by adding some memories.
			</p>
			<a href="/" class="btn btn-sm btn-success btn-outline">‚ú® Add Memory</a>
		</div>
	</template>
</Layout>

<script>
	const target = document.getElementById("target")! as HTMLDivElement;
	const deleteTarget = document.querySelectorAll(".delete-target")! as NodeListOf<HTMLDivElement>;
	const cardTemplate = document.getElementById("card")! as HTMLTemplateElement;
	const notFoundTemplate = document.getElementById("notFound")! as HTMLTemplateElement;

	window.onload = async () => {
		const uid = localStorage.getItem("uid");

		function notFound() {
			target.classList.remove("grid");
			target.innerHTML = notFoundTemplate.innerHTML;
			return;
		}

		if (!uid) {
			notFound();
			return;
		}

		const res = await fetch(`/api/posts?uid=${uid}`);
		const { data } = await res.json();

		if (res.status !== 200 || !data || data.length === 0) {
			notFound();
			return;
		}

		deleteTarget.forEach((el) => {
			el.remove();
		});

		data.forEach((el: any, i: number) => {
			// Clone the template
			const clone = cardTemplate.content.cloneNode(true) as HTMLDivElement;
			// Set the id for deletion purposes
			(clone.querySelector("div") as HTMLDivElement).id = "id" + i;

			// Get the elements
			const figure = clone.querySelector("figure")! as HTMLDivElement;
			const img = figure.querySelector("img")! as HTMLImageElement;
			const cardBody = clone.querySelector(".card-body")! as HTMLDivElement;
			const p = cardBody.querySelector("p")! as HTMLParagraphElement;

			// Get the buttons
			const btns = cardBody.querySelectorAll("button")! as NodeListOf<HTMLButtonElement>;

			img.src = el.image;
			p.innerText = el.text.substring(0, 50) + "...";
			target.insertBefore(clone, target.lastElementChild);

			btns[0].addEventListener("click", async () => {
				const res = await fetch(`/api/post?id=${el.id}&uid=${uid}`, {
					method: "DELETE",
				});

				if (res.status === 202) {
					// Remove the element
					document.getElementById("id" + i)!.remove();
				} else {
					alert("Something went wrong, please try again later.");
				}
			});

			btns[1].addEventListener("click", () => {
				window.location.href = `/${el.url}`;
			});
		});
	};
</script>
